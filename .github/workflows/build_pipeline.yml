# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: Test
          draft: false
          prerelease: true

      - name: Store Release url
        run: echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url

      - name: Upload Release url
        uses: actions/upload-artifact@v2
        with:
          name: upload-url-file
          path: upload_url

  # This workflow contains a single job called "build"
  build-ubuntu:
    needs: create-release
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build ./build

      - name: Pack Artifacts
        run: zip --junk-paths ubuntu ${{github.workspace}}/build/client/Guild2CloneClient ${{github.workspace}}/build/server/Guild2CloneServer

      - name: Download url file
        uses: actions/download-artifact@v2
        with:
          name: upload-url-file 
          path: ./

      - name: Set Upload url
        id: set_upload_url
        run: |
          upload_url=`cat ./upload_url`
          echo ::set-output name=upload_url::$upload_url
      
      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
          asset_path: ./ubuntu.zip
          asset_name: ubuntu.zip
          asset_content_type: application/zip
  # This workflow contains a single job called "build"
  build-windows:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Build Pipeline
        run: sudo apt-get install mingw-w64

      # Runs a set of commands using the runners shell
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=cross-compile-windows.cmake        

      - name: Build
        run: cmake --build ./build
